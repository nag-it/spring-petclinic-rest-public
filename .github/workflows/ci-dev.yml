name: 00 CI Development

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      image-tag:
        description: "The image tag of the new docker image"
        value: ${{ jobs.docker.outputs.image-tag }}
  push:
    branches:
      - 'feature/**'
      - 'hotfix/**'
    paths-ignore:
      - '**/".md'
      - '**/".txt'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    name: Build Maven
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test with Maven
        run: mvn package --batch-mode

      - name: Copy test results
        if: always()
        run: mkdir test-results && cp target/*-reports/TEST-*.xml test-results

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-results/**/*.xml
          check_name: "Unit Test Results"
          comment_title: "Unit Test Results"

      - name: Save compiled artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: target/*.jar
          retention-days: 1

  docker:
    name: Build Docker Image
    needs: build
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download application binary
      uses: actions/download-artifact@v3.0.0
      with:
        name: app
        path: target

    - name: Log in to the Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.1.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3.2.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # deploy docker image to azure
     