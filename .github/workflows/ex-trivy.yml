name: 00 Example

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      packages: write
    uses: ./.github/workflows/ci-dev.yml
    secrets: inherit

  container-image-scan:
    name: Container Image Scan
    permissions:
      checks: write
      security-events: write
      actions: read
      contents: read
      packages: read
    runs-on: ubuntu-latest
    
    steps:
    - name: Wait for Docker image to be created
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.ref }}
        running-workflow-name: 'docker'
        check-name: 'docker'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull Image
      run: docker pull ${{ needs.docker.outputs.image-tag || github.event.inputs.image-tag }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.7.1
      with:
        image-ref: ${{ needs.docker.outputs.image-tag || github.event.inputs.image-tag }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        hide-progress: false
        timeout: 10m
        scanner: license

    - name: Upload Trivy scan results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
