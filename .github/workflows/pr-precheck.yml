name: 00 PR PreCheck

on:
  workflow_dispatch:
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #build:
  #  name: Build
  #  permissions:
  #    contents: read
  #    issues: read
  #    checks: write
  #    pull-requests: write
  #    packages: write
  #  uses: ./.github/workflows/ci-dev.yml
  #  secrets: inherit

  license-finder:
    name: License Finder
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: License Finder fix
        run: rm mvnw

      - name: License Finder
        uses: jmservera/license-finder-action@v0.1.4-alpha
        with:
          permitted-licenses: MIT,Apache-2.0
          approved-dependencies: jquery,bootstrap

      - name: Publish license results
        uses: EnricoMi/publish-unit-test-result-action@v2.0.0
        if: always()
        with:
          junit_files: "license_finder_report.xml"
          check_name: "License Finder Results"
          comment_title: "License Finder Results"

      - name: Upload Dependency Review Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: license-finder-report
          path: license_finder_report.xml

  sast-codeql:
    name: SAST CodeQL
    permissions:
      checks: write
      security-events: write
      actions: read
      contents: read
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -B -Dmaven.test.skip

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:java"

  container-image-scan:
    name: Container Image Scan
    permissions:
      checks: write
      security-events: write
      actions: read
      contents: read
      packages: read
    runs-on: ubuntu-latest
    
    steps:
    - name: Wait for Docker image to be created
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.ref }}
        check-name: 'Build Docker Image'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull Image
      run: docker pull ${{ needs.docker.outputs.image-tag || github.event.inputs.image-tag }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.7.1
      with:
        image-ref: ${{ needs.docker.outputs.image-tag || github.event.inputs.image-tag }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        hide-progress: false
        timeout: 10m

    - name: Upload Trivy scan results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
